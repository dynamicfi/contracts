{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6225C6D3a190A78A16C26f6983e2C6CAb6beAb43",
    "txHash": "0x18241cf2ceb366e349451e3f919aead9a0db0b3eb2dbbc89caee3909d0a038b1"
  },
  "proxies": [
    {
      "address": "0x85580296751DAa96c31892EDbf6867990ab41D57",
      "txHash": "0xd4a382483129320932a3fd58880411b67ae1aea52d98aee2c851f50028e47e32",
      "kind": "transparent"
    },
    {
      "address": "0xa8cc3cD3450f33Bda85c286821C3F20e98E16669",
      "txHash": "0x0af7113d73265a7b24b87d57c78f65a8552b7350f6beef04d0c65ee78a7abb19",
      "kind": "transparent"
    },
    {
      "address": "0x086e899e3310a57C7D9b1cB22795E9010d2AC406",
      "txHash": "0x82b0f5b9d178ff0cbe59af0c6237da1dfb0936dc6a9321fcd9948b40ed0c56e1",
      "kind": "transparent"
    },
    {
      "address": "0x83fCb82251E9aDf653473220648dce5815dB7AB8",
      "txHash": "0x5f7487d6cc8ccdebd1606d045b1c25968957ae4b73ef43eb6e599968a8de6e7a",
      "kind": "transparent"
    },
    {
      "address": "0x28E45771a24C2BF662b323a43761b43864BE38c3",
      "txHash": "0x9a09ae26acf98995f3474c32bfa99240732a5acd415514215b22ca1d442cff7e",
      "kind": "transparent"
    },
    {
      "address": "0xCA5a937C292f362e3f70b2Ed70F620d6ABa31fb2",
      "txHash": "0xf51e479975f432ddd7129fa5485c19de92614b7ca6931348cfee48a289faee0e",
      "kind": "transparent"
    },
    {
      "address": "0x2d2390A8a26E124c35bAaf8fc259d1760B23985d",
      "txHash": "0x4656057cc92b413b34ab48e8a7da5185cdb42987c77fb20faa2719e9d9d6b040",
      "kind": "transparent"
    },
    {
      "address": "0x07a40a2674d0c9055E64c85C2D58233B46668854",
      "txHash": "0x59809bae8015395a792d24501bee85dd3ca3516e37b31d35e997d8eb704d3fc6",
      "kind": "transparent"
    },
    {
      "address": "0x3eFA7C3265b0fA67fC255018e50E5B42EaB75F37",
      "txHash": "0xca3502b8f40674622aef7f30de3cd4a4bb48a9c13ec94e6a79f9f942c9cd7074",
      "kind": "transparent"
    },
    {
      "address": "0x676371B35536f2482D5534Da2905c915E753Df66",
      "txHash": "0x91bb79f8f8fc0152a000b41ad96de413c680d3250d3d8c19aabbd0b3dc4af8a5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d7aa58dc893f29b688235729d83d14f72e42706652a6d52c173a0eb290dd9860": {
      "address": "0x1c72c2Caf856ad55738724cC495833ecb78aa6f6",
      "txHash": "0x1bbe42042c4c1c9937c05654f565042907bd86e3dffb816ed173fd706d25962f",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:26"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:27"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:28"
          },
          {
            "label": "zeroFee",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "999433ea90a5685d8e5232cfe24098e700ed81cedf1579a3e2145ce522287a7f": {
      "address": "0xAAF5f1977dDc92A979ECBeFc4e3EA5f1C561800F",
      "txHash": "0x287dca3833848ccdc4d17677a45db7c1d373297a39278e2846c1197e05e94c68",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:26"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:27"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:28"
          },
          {
            "label": "zeroFee",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossChain",
            "src": "contracts/swap/MultiChainSwap.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3e0ba69a6250e4b71414b44ebc261d69fe0aa27febb91fdd02a390c71579315b": {
      "address": "0xaB1e1f2Addabd8c9D1E46EAb82DC204Aa78aA23B",
      "txHash": "0xc16f5934533135cb6cf10bb6d0f960bd86c25a8e0837d490d234e98ca8c731ee",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "depositEnable",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:29"
          },
          {
            "label": "minTokensToReinvest",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:30"
          },
          {
            "label": "depositAverageRate",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:31"
          },
          {
            "label": "depositors",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:32"
          },
          {
            "label": "DYNA",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:33"
          },
          {
            "label": "USD",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:34"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(DepositStruct)2768_storage)",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:43"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "totalValues",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DyETH",
            "src": "contracts/DyETH.sol:25"
          },
          {
            "label": "percentByValues",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DyETH",
            "src": "contracts/DyETH.sol:26"
          },
          {
            "label": "totalTokenStack",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "DyETH",
            "src": "contracts/DyETH.sol:27"
          },
          {
            "label": "ONE_MONTH_IN_SECONDS",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "DyETH",
            "src": "contracts/DyETH.sol:28"
          },
          {
            "label": "tokenDelegator",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IVenusBNBDelegator)6406",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:44"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "213",
            "type": "t_contract(IVenusUnitroller)6486",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:45"
          },
          {
            "label": "xvsToken",
            "offset": 0,
            "slot": "214",
            "type": "t_contract(IERC20Upgradeable)1030",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:46"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "215",
            "type": "t_contract(IERC20Upgradeable)1030",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:47"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "216",
            "type": "t_contract(IPancakeRouter)6238",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:48"
          },
          {
            "label": "leverageLevel",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:49"
          },
          {
            "label": "leverageBips",
            "offset": 0,
            "slot": "218",
            "type": "t_uint256",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:50"
          },
          {
            "label": "minMinting",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:51"
          },
          {
            "label": "redeemLimitSafetyMargin",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:52"
          },
          {
            "label": "totalInterest",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "DyBNBVenus",
            "src": "contracts/dynaBNB/DyBNBVenus.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)1030": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouter)6238": {
            "label": "contract IPancakeRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IVenusBNBDelegator)6406": {
            "label": "contract IVenusBNBDelegator",
            "numberOfBytes": "20"
          },
          "t_contract(IVenusUnitroller)6486": {
            "label": "contract IVenusUnitroller",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DepositStruct)2768_storage)": {
            "label": "mapping(address => struct DyToken.DepositStruct)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DepositStruct)2768_storage": {
            "label": "struct DyToken.DepositStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dynaBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "enable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "45bbb333ad5950e2f905eea83ab387823c93a6ba6327f6fe99b5f3b17578db50": {
      "address": "0x752FA206A1120a3ff1f6237fe782eF84256D6b2d",
      "txHash": "0xdc469e56bf09c08ceeea0d122ba30c60a5397bcb771c5f4319393da9a7e2e101",
      "layout": {
        "solcVersion": "0.8.13",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "depositEnable",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:29"
          },
          {
            "label": "minTokensToReinvest",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:30"
          },
          {
            "label": "depositAverageRate",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:31"
          },
          {
            "label": "depositors",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:32"
          },
          {
            "label": "DYNA",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:33"
          },
          {
            "label": "USD",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:34"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_struct(DepositStruct)2493_storage)",
            "contract": "DyToken",
            "src": "contracts/DyToken.sol:43"
          },
          {
            "label": "underlying",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IERC20Upgradeable)971",
            "contract": "DyERC20",
            "src": "contracts/DyERC20.sol:22"
          },
          {
            "label": "totalValues",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DyERC20",
            "src": "contracts/DyERC20.sol:23"
          },
          {
            "label": "percentByValues",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DyERC20",
            "src": "contracts/DyERC20.sol:24"
          },
          {
            "label": "totalTokenStack",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "DyERC20",
            "src": "contracts/DyERC20.sol:25"
          },
          {
            "label": "ONE_MONTH_IN_SECONDS",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "DyERC20",
            "src": "contracts/DyERC20.sol:26"
          },
          {
            "label": "tokenDelegator",
            "offset": 0,
            "slot": "163",
            "type": "t_contract(IVenusBEP20Delegator)4622",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:43"
          },
          {
            "label": "rewardController",
            "offset": 0,
            "slot": "164",
            "type": "t_contract(IVenusUnitroller)4702",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:44"
          },
          {
            "label": "xvsToken",
            "offset": 0,
            "slot": "165",
            "type": "t_contract(IERC20Upgradeable)971",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:45"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "166",
            "type": "t_contract(IERC20Upgradeable)971",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:46"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "167",
            "type": "t_contract(IPancakeRouter)4534",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:47"
          },
          {
            "label": "leverageLevel",
            "offset": 0,
            "slot": "168",
            "type": "t_uint256",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:48"
          },
          {
            "label": "leverageBips",
            "offset": 0,
            "slot": "169",
            "type": "t_uint256",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:49"
          },
          {
            "label": "minMinting",
            "offset": 0,
            "slot": "170",
            "type": "t_uint256",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:50"
          },
          {
            "label": "redeemLimitSafetyMargin",
            "offset": 0,
            "slot": "171",
            "type": "t_uint256",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:51"
          },
          {
            "label": "totalInterest",
            "offset": 0,
            "slot": "172",
            "type": "t_uint256",
            "contract": "DyBEP20Venus",
            "src": "contracts/dynaBNB/DyBEP20Venus.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IPancakeRouter)4534": {
            "label": "contract IPancakeRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IVenusBEP20Delegator)4622": {
            "label": "contract IVenusBEP20Delegator",
            "numberOfBytes": "20"
          },
          "t_contract(IVenusUnitroller)4702": {
            "label": "contract IVenusUnitroller",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(DepositStruct)2493_storage)": {
            "label": "mapping(address => struct DyToken.DepositStruct)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DepositStruct)2493_storage": {
            "label": "struct DyToken.DepositStruct",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dynaBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "enable",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
